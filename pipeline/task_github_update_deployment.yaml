apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: git
  name: github-update-deployment
  labels:
    operator.tekton.dev/provider-type: community
spec:
  description: This task can be used to update image digest in a Git repo using kustomize
  params:
    - name: APP_MANIFESTS_GIT
      type: string

    - name: GIT_REVISION
      type: string
    - name: GIT_PUSHER_NAME
      type: string
    - name: GIT_PUSHER_EMAIL
      type: string
    - name: GIT_COMMIT_MESSAGE
      type: string

    - name: CURRENT_IMAGE
      type: string
    - name: NEW_IMAGE
      type: string
    - name: NEW_DIGEST
      type: string
    - name: KUSTOMIZATION_PATH
      type: string
  workspaces:
    - description: The workspace consisting of maven project.
      name: workspace

  results:
    - name: commit
      description: The commit SHA

  stepTemplate:
    envFrom:
      - secretRef:
          name: github-secrets

  steps:
    - name: setup-github
      image: image-registry.openshift-image-registry.svc:5000/nodejs-gitops-pipeline/gitops-cli:latest
      workingDir: $(workspaces.workspace.path)
      script: |
        echo "-> Validating authentication against github.com"

        gh auth status

        gh auth setup-git

        git config --global user.email "$(params.GIT_PUSHER_EMAIL)"

        git config --global user.name "$(params.GIT_PUSHER_NAME)"

    - name: git-clone
      image: image-registry.openshift-image-registry.svc:5000/nodejs-gitops-pipeline/gitops-cli:latest
      workingDir: $(workspaces.workspace.path)
      script: |
        rm -rf git-update-digest-workdir
        git clone $(params.APP_MANIFESTS_GIT) git-update-digest-workdir

    - name: update-digest
      image: image-registry.openshift-image-registry.svc:5000/nodejs-gitops-pipeline/gitops-cli:latest
      workingDir: $(workspaces.workspace.path)
      script: |
        cd git-update-digest-workdir/$(params.KUSTOMIZATION_PATH)

        echo "resources:\n\t$(params.NEW_IMAGE)" > kustomization.yaml

        echo "-> kustomization.yaml"
        cat kustomization.yaml

    - name: git-commit
      image: image-registry.openshift-image-registry.svc:5000/nodejs-gitops-pipeline/gitops-cli:latest
      workingDir: $(workspaces.workspace.path)
      script: |
        cd git-update-digest-workdir
        
        # git add $(params.KUSTOMIZATION_PATH)/kustomization.yaml
        # git commit -m "[$(context.pipelineRun.name)] Image digest updated"
        git commit -am "$(context.pipelineRun.name)@$(params.GIT_REVISION)"
        
        git status

        #git remote add auth-origin $(echo $(params.GIT_REPOSITORY) | sed -E "s#http://(.*)#http://$GITHUB_USER:$GITHUB_PASSWORD@\1#g")
        git push origin main

        RESULT_SHA="$(git rev-parse HEAD | tr -d '\n')"
        EXIT_CODE="$?"
        if [ "$EXIT_CODE" != 0 ]
        then
          exit $EXIT_CODE
        fi
        # Make sure we don't add a trailing newline to the result!
        echo -n "$RESULT_SHA" > $(results.commit.path)