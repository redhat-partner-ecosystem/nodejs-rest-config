apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pipeline-nodejs-gitops
spec:
  params:
    - name: APP_NAME
      type: string
      default: "nodejs-gitops"

    - name: GIT_REPO
      type: string
      default: "https://github.com/redhat-capgemini-exchange/nodejs-rest.git"
    - name: GIT_REVISION
      type: string
      default: develop
    - name: GIT_BRANCH_REF
      type: string
      default: "foo/bar/develop"
    - name: GIT_PUSHER_NAME
      type: string
      default: "root"
    - name: GIT_PUSHER_EMAIL
      type: string
      default: "roo@example.com"
    - name: GIT_COMMIT_MESSAGE
      type: string
      default: "commit"

    - name: BUILDER_VERSION
      type: string
      default: "14-ubi8"
    - name: PATH_CONTEXT
      type: string
      default: "."

    - name: IMAGE_STREAM
      type: string
      default: >-
        image-registry.openshift-image-registry.svc:5000/nodejs-gitops-pipeline/nodejs-gitops
    - name: IMAGE_TAG
      type: string
      default: latest

    - name: MANIFESTS_GIT
      type: string
      default: "https://github.com/redhat-capgemini-exchange/nodejs-gitops"
    
  workspaces:
    - name: workspace

  tasks:
    - name: git-clone
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: submodules
          value: "true"
        - name: subdirectory
          value: ""
        - name: depth
          value: "1"
        - name: deleteExisting
          value: "true"
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: workspace

    - name: update-deployment
      runAfter:
        - git-clone
      taskRef:
        name: github-update-deployment
      params:
        - name: MANIFESTS_GIT
          value: "$(params.MANIFESTS_GIT)"

        - name: GIT_REVISION
          value: $(params.GIT_REVISION)
        - name: GIT_BRANCH_REF
          value: $(params.GIT_BRANCH_REF)
        - name: GIT_PUSHER_NAME
          value: $(params.GIT_PUSHER_NAME)
        - name: GIT_PUSHER_EMAIL
          value: $(params.GIT_PUSHER_EMAIL)
        - name: GIT_COMMIT_MESSAGE
          value: $(params.GIT_COMMIT_MESSAGE)
          
        - name: CURRENT_IMAGE
          value: $(params.IMAGE_STREAM)
        - name: NEW_IMAGE
          value: $(params.IMAGE_STREAM)
        - name: NEW_DIGEST
          value: $(params.GIT_REVISION)
        - name: KUSTOMIZATION_PATH
          value: app/dev

      workspaces:
        - name: source
          workspace: workspace

    #- name: app-test
    #  runAfter:
    #    - git-clone
    #  taskRef:
    #    name: npm-test
    #  workspaces:
    #    - name: source
    #      workspace: workspace

    #- name: build
    #  params:
    #    - name: IMAGE
    #      value: $(params.IMAGE_STREAM)
    #    - name: TLSVERIFY
    #      value: "false"
    #    - name: PATH_CONTEXT
    #      value: $(params.PATH_CONTEXT)
    #    - name: VERSION
    #      value: $(params.BUILDER_VERSION)
    #  runAfter:
    #    - git-clone
    #  taskRef:
    #    kind: ClusterTask
    #    name: s2i-nodejs
    #  workspaces:
    #    - name: source
    #      workspace: workspace

    #- name: tag-build
    #  taskRef:
    #    name: tag-image
    #  runAfter:
    #    - build
    #  params:
    #    - name: commit
    #      value: $(params.GIT_COMMIT)
    #    - name: IMAGE_NAME
    #      value: $(params.APP_NAME)
    #    - name: REF
    #      value: $(params.REF)
    #    - name: NAMESPACE
    #      value: $(params.NAMESPACE)
    #- name: digest
    #  value: $(tasks.build.results.IMAGE_DIGEST)
