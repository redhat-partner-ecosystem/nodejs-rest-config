kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    description: Defines how to deploy the database
  name: postgresql
  labels:
    app: nodejs-gitops
spec:
  strategy:
    type: Recreate
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - postgresql
        from:
          kind: ImageStreamTag
          namespace: openshift
          name: 'postgresql:12-el8'
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: postgresql
  template:
    metadata:
      name: postgresql
      labels:
        name: postgresql
    spec:
      volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
      containers:
        - resources:
            limits:
              memory: 256Mi
          terminationMessagePath: /dev/termination-log
          name: postgresql
          livenessProbe:
            tcpSocket:
              port: 5432
            initialDelaySeconds: 30
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: POSTGRESQL_DATABASE
              value: my_data
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: nodejs-gitops-secrets
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nodejs-gitops-secrets
                  key: database-password
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nodejs-gitops-secrets
                  key: database-admin-password
          ports:
            - containerPort: 5432
              protocol: TCP
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/pgsql/data
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
--- 
kind: Service
apiVersion: v1
metadata:
  name: postgresql
  labels:
    app: nodejs-gitops
  annotations:
    description: Exposes the database server
spec:
  ipFamilies:
    - IPv4
  ports:
    - name: postgresql
      protocol: TCP
      port: 5432
      targetPort: 5432
  internalTrafficPolicy: Cluster
  type: ClusterIP
  ipFamilyPolicy: SingleStack
  sessionAffinity: None
  selector:
    name: postgresql
status:
  loadBalancer: {}
--- 
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgresql
  finalizers:
    - kubernetes.io/pvc-protection
  labels:
    app: nodejs-gitops
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: gp2
  volumeMode: Filesystem
