kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    description: Defines how to deploy the app
  name: nodejs-rest
  labels:
    app: nodejs-rest
    app.openshift.io/runtime: nodejs
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    #type: Recreate
    #recreateParams:
    #  timeoutSeconds: 600
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ConfigChange
  replicas: 1
  revisionHistoryLimit: 10
  test: false
  selector:
    name: nodejs-rest
  template:
    metadata:
      name: nodejs-rest
      labels:
        app.openshift.io/runtime: nodejs
        name: nodejs-rest
    spec:
      containers:
        - name: nodejs-rest
          image: "image-registry.openshift-image-registry.svc:5000/nodejs-rest-pipeline/nodejs-rest:main"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 256Mi
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 3
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: DATABASE_SERVICE_NAME
              value: postgresql
            - name: POSTGRESQL_DATABASE
              value: my_data
            - name: POSTGRESQL_USER
              valueFrom:
                secretKeyRef:
                  name: nodejs-rest-secrets
                  key: database-user
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nodejs-rest-secrets
                  key: database-password
            - name: POSTGRESQL_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: nodejs-rest-secrets
                  key: database-admin-password
          ports:
            - containerPort: 8080
              protocol: TCP
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
